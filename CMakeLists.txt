cmake_minimum_required(VERSION 3.19)
project(SwiftySyncUniversalClient)
project(c_api_connector)

set(CMAKE_CXX_STANDARD 14)

add_compile_definitions(CLIENT)
add_compile_definitions(_WEBSOCKETPP_CPP11_RANDOM_DEVICE_)
add_compile_definitions(_WEBSOCKETPP_CPP11_TYPE_TRAITS_)
add_compile_definitions(ASIO_STANDALONE)

add_subdirectory(SwiftySyncAuthorization)
add_subdirectory(SwiftySyncCommon)
add_subdirectory(SwiftySyncStorage)

include_directories(SwiftySyncAuthorization)
include_directories(SwiftySyncCommon)
include_directories(SwiftySyncStorage)

include_directories(/)
include_directories(SwiftySyncAuthorization/cpp-httplib)
include_directories(websocketpp)
include_directories(SwiftySyncCommon/CodablePP)

include_directories(${OPENSSL_INCLUDE_DIR})

include_directories(asio2)
include_directories(asio2/asio)

add_library(SwiftySyncUniversalClient SwiftySyncUniversalClient.cpp SwiftySyncUniversalClient.h)
target_link_libraries(SwiftySyncUniversalClient SwiftySyncAuthorization SwiftySyncCommon SwiftySyncStorage)

add_library(c_api_connector c_api_connector.cpp c_api_connector.h)
target_link_libraries(c_api_connector SwiftySyncUniversalClient c_api_storage)

add_executable(test_client main.cpp)
target_link_libraries(test_client LINK_PUBLIC SwiftySyncUniversalClient)

set(CMAKE_C_STANDARD 11)

add_executable(test_c_api c_api_test.c)
target_link_libraries(test_c_api LINK_PUBLIC c_api_connector)